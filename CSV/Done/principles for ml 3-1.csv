Page of the document;text
21;"Strengthen your infrastructure. Follow technical advice on how to protect data on your specific infrastructure (eg, local PC or cloud)"
21;"Follow technical advice on how to protect data in transit (for when this is required) and at rest"
21;"Implement recognised IT standards. ISO â€“ 27001"
21;"Strengthen your people. Ensure decision makers understand what data you hold, and the law and regulations around data collection"
21;"Ensure your developers understand the impact and consequences of data breaches, their responsibility when processing data and the importance of developing secure software"
22;"Track your assets. Document the creation, operation and lifecycle management of models and datasets."
23;"You know the intended use of the dataset, including where it can and can't be used."
23;"You know who is authorised to access your data."
23;"You know when your data needs to be deleted."
23;"You are aware of any biases in your data."
23;"You have considered what metadata should be captured, and for what purpose."
23;"You 'version-control' your dataset throughout its lifecycle, and can roll back datasets or models easily to help with root cause analysis."
23;"If a model is compromised model, you can roll back to a known safe state."
23;"You know what data you hold and where it is stored."
23;"If you are distributing your dataset or model, the recipients can verify the authenticity of the contents using attached metadata and confirm it hasn't been tampered with."
23;"You are monitoring key metrics that can be tracked across the data lifecycle."
23-24;"Consider using version-control software (such as Git) to track and control changes to software, datasets and your resulting model. The size of your project assets (eg, datasets) may limit your choice of technologies. Larger assets may require more specific, database- centric technologies."
24;"Track dataset information and updates in a consistent format that is readable by humans and that can be easily processed or parsed by a computer (eg, json, csv). This metadata should be paired with the dataset throughout its lifecycle and include updates to the dataset made throughout operation, via continual learning, as discussed in section 4 - In operation: continual/online learning."
24;"Track model information in a consistent format that is readable by humans and that can be easily processed or parsed by a computer (eg, json, csv). The model's metadata should be paired with it throughout its lifecycle and include updates to the model made throughout operation, via continual learning, as discussed in section 4 - In operation: continual/online learning."
24;"Empower your people with accountability for assets. Accountability can be for the creation of an asset and/or the maintenance of it."
24;"Ensure your development team follows good development operations management. Operations management is important for security because it covers policy compliance, configuration and management of development tools (eg, version-control software). This management should continue throughout the lifecycle."
25;"Design for security (model architecture). Keep your model architecture and capacity proportionate to your training data and requirements."
27;"Test a range of model types on your data and assess their performance. This will help you make an informed decision about which model is best for your application, but also which performs best on security aspects."
27;"Discuss with experienced practitioners in your team or research area where others have overcome similar problems to yours. This knowledge will speed up development time, allowing more time for fine tuning the model parameters to ensure a good fit between your model and training data."
27;"If your team has little direct knowledge or experience of the problem you're working on, a useful place to start may be to consider which models are not appropriate for this solution."
27-28;"When selecting a team of developers, put in place processes to ensure their knowledge of algorithms is wide, and invest in the appropriate training and guidance to fill gaps in knowledge. Training should be continual, as new trends and developments come out of academia."
28;"Review the size and quality of your dataset against your requirements. The metrics you use to evaluate it will depend on your specific application, although there are many rules of thumb that can be applied here. The data scientists and practitioners should select which are most appropriate for your application."
28;"Attackers may exploit out of distribution (OoD) areas of the feature space for attacks. Where complex models are required, consider implementing OoD detection on inference inputs. Depending how your developer implements this, it could double up as detection mechanism for some adversarial attacks."
28-29;"Firstly, consider whether the use of more complex model (eg, a neural network) is justified for your use case. In many applications, particularly those using structured data, classical ML methods may achieve sufficient performance whilst being more interpretable and potentially subject to a smaller range of attacks. If a complex model is required, there are a range of techniques highlighted in research and academia for reducing the size of a complex model (often a neural network). Many fall under the umbrella technique of 'pruning'. Pruning occurs after you have a trained model and involves removing unnecessary neurons or weights. Pruning can have a detrimental impact on performance and should be used when other more pragmatic techniques have fallen short. When required, consider regularly pruning and simplifying your model during the development and testing process, rather than doing a final test pre- deployment."
30;"Secure your infrastructure. Limit access to your model and its processing pipeline in deployment."